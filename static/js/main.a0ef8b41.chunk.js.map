{"version":3,"sources":["Components/UniButton.tsx","Counter.tsx","bll/counter-reducer.ts","CounterSettings.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx"],"names":["UniButton","props","Button","variant","style","color","onClick","callback","title","Counter","Typography","align","fontSize","fontWeight","className","error","classes","marginTop","marginBottom","value","Inc","Dec","Reset","startValue","initState","maxValue","resetAC","type","CounterSettings","dispatch","useDispatch","Input","whiteSpace","minWidth","marginLeft","inputProps","textAlign","width","onChange","e","currentTarget","setError","settingsStartValue","localStorage","setItem","toString","settingsMaxValue","Box","setToLocalStorage","clearLocalStorage","useStyles","makeStyles","root","height","display","justifyContent","alignItems","backgroundRepeat","backgroundSize","CardItem","background","justifyItems","APP","useSelector","state","counter","startValueDisplay","maxValueDisplay","getItem","useEffect","useState","Container","fixed","maxWidth","Grid","container","spacing","item","md","Card","square","setCounterSettingsAC","clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mainReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"qPASO,SAASA,EAAUC,GAMtB,OACI,cAACC,EAAA,EAAD,CAAQC,QAAS,WAAYC,MAAO,CAACC,MAAO,SAAUC,QALnC,WACnBL,EAAMM,YAIN,SAAgFN,EAAMO,QCIvF,SAASC,EAAQR,GACpB,OACI,gCACI,cAACS,EAAA,EAAD,CAAYC,MAAO,SACPR,QAAS,WACTC,MAAO,CAACQ,SAAU,MAAOC,WAAY,UAFjD,qBAGA,qBAAKC,UAAWb,EAAMc,MAAQd,EAAMe,QAAQD,MAAQ,GAC/CX,MAAO,CAACa,UAAW,OAAQC,aAAc,OAAQN,SAAU,QADhE,SAC0EX,EAAMc,MAC5E,wCAAoBd,EAAMkB,QAC9B,cAACnB,EAAD,CAAWO,SAAUN,EAAMmB,IAChBZ,MAAM,OAEjB,cAACR,EAAD,CAAWO,SAAUN,EAAMoB,IAChBb,MAAM,OAEjB,cAACR,EAAD,CAAWO,SAAU,WAAON,EAAMqB,MAAMrB,EAAMsB,aACnCf,MAAM,a,mCCpCvBgB,EAAY,CACdL,MAAO,EACPI,WAAY,EACZE,SAAU,GA+DDC,EAAU,SAACH,GACpB,MAAO,CACHI,KAAM,cACNJ,eClDD,SAASK,EAAgB3B,GAC5B,IAAM4B,EAAWC,cAwBjB,OAEI,gCACI,cAACpB,EAAA,EAAD,CAAYP,QAAS,WAAYC,MAAO,CAACQ,SAAU,MAAOC,WAAY,UAAtE,sBACA,sBAAKC,UAAWb,EAAMe,QAAQe,MAA9B,UAAqC,cAACrB,EAAA,EAAD,CAAYP,QAAS,WAAYC,MAAO,CACzE4B,WAAY,SACZC,SAAU,OAAQC,WAAY,QAFG,yBAGV,cAACH,EAAA,EAAD,CAAOJ,KAAK,SACLQ,WAAY,CAAC/B,MAAO,CAACgC,UAAW,SAAUC,MAAO,SACjDlB,MAAOlB,EAAMsB,WACbe,SAhCR,SAACC,GAC/B,IAAKA,EAAEC,cAAcrB,OAAS,EAAG,CAC7BlB,EAAMwC,UAAS,GACf,IAAIlB,GAAcgB,EAAEC,cAAcrB,MAClCU,ED6DD,CACHF,KAAM,kBACNe,mBC/D6BnB,IACzBoB,aAAaC,QAAQ,aAAcrB,EAAWsB,iBAE9C5C,EAAMwC,UAAS,SA2Bf,sBAAK3B,UAAWb,EAAMe,QAAQe,MAA9B,UAAqC,cAACrB,EAAA,EAAD,CAAYP,QAAS,WAAYC,MAAO,CACzE4B,WAAY,SACZC,SAAU,OAAQC,WAAY,QAFG,uBAArC,IAG0B,cAACH,EAAA,EAAD,CAAOJ,KAAK,SACLb,UAAWb,EAAMe,QAAQe,MACzBI,WAAY,CAAC/B,MAAO,CAACgC,UAAW,SAAUC,MAAO,SACjDlB,MAAOlB,EAAMwB,SACba,SA9BT,SAACC,GAC7B,IAAKA,EAAEC,cAAcrB,OAAS,EAAG,CAC7BlB,EAAMwC,UAAS,GACf,IAAIhB,GAAYc,EAAEC,cAAcrB,MAChCU,EDyDD,CACHF,KAAM,gBACNmB,iBC3D2BrB,IACvBkB,aAAaC,QAAQ,WAAYnB,EAASoB,iBAE1C5C,EAAMwC,UAAS,SA0Bf,eAACM,EAAA,EAAD,CAAK9B,UAAW,OAAhB,UACI,cAACjB,EAAD,CAAWO,SAAUN,EAAM+C,kBAChBxC,MAAO,QAClB,cAACR,EAAD,CAAWO,SAAUN,EAAMgD,kBAChBzC,MAAO,gBC1DlC,IAAM0C,EAAYC,YAAW,CACzBC,KAAM,CACFf,MAAO,OACPgB,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,iBAAkB,YAClBC,eAAgB,SAEpB3C,MAAO,CACHV,MAAO,OAEXsD,SAAU,CACNtB,MAAO,OACPgB,OAAQ,OACRjB,UAAW,SACXwB,WAAY,WAEhB7B,MAAO,CACHuB,QAAS,OACTO,aAAc,YAuGPC,MAnGf,WAEI,IAAM9C,EAAUkC,IAEZ/B,EAAQ4C,aAAkC,SAAAC,GAAK,OAAIA,EAAMC,QAAQ9C,SAC/D+C,EAAoBH,aAAkC,SAAAC,GAAK,OAAIA,EAAMC,QAAQ1C,cAC7E4C,EAAkBJ,aAAkC,SAAAC,GAAK,OAAIA,EAAMC,QAAQxC,YAC3EI,EAAWC,cAEbP,GAAcoB,aAAayB,QAAQ,cACnC3C,GAAYkB,aAAayB,QAAQ,YAErCC,qBAAU,cAEP,IAdQ,MAgBaC,oBAAkB,GAhB/B,mBAgBNvD,EAhBM,KAgBC0B,EAhBD,KAwDX,OACI,qBAAKrC,MAAO,CACRwD,WAAW,8DACXP,OAAQ,QACRK,eAAgB,SAHpB,SAKI,cAACa,EAAA,EAAD,CAAWC,OAAK,EAACC,SAAS,KAAK3D,UAAWE,EAAQoC,KAAlD,SACI,eAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGrB,eAAgB,SAA5C,UACI,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAM5E,QAAQ,WAAW6E,QAAM,EAAClE,UAAWE,EAAQ2C,SAAnD,SACI,cAAClD,EAAD,CAASU,MAAOA,EACPM,SAAUA,EACVL,IAlDjC,WACYD,EAAQM,GACRgB,GAAS,GACTZ,EFHL,CACHF,KAAM,eEIEc,GAAS,IA8CYnB,MAjCjC,SAAeC,GACXM,EAASH,EAAQH,IACjBkB,GAAS,IAgCoBpB,IA3CjC,WACYF,EAAQI,GACRkB,GAAS,GACTZ,EFNL,CACHF,KAAM,eEOEc,GAAS,IAuCYlB,WAAYA,EACZ2C,kBAAmBA,EACnBzB,SAAUA,EACV1B,MAAOA,EACPC,QAASA,QAI1B,cAAC0D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAM5E,QAAQ,WAAW6E,QAAM,EAAClE,UAAWE,EAAQ2C,SAAnD,SACI,cAAC/B,EAAD,CAAiBL,WAAYA,EACZE,SAAUA,EACVuB,kBAzCf,WACtBP,GAAS,GACLyB,GAAqBC,GACrBtC,EFTwB,SAACN,GACjC,MAAO,CACHI,KAAM,uBACNJ,cEMa0D,CAAqBf,KAuCGjB,kBApCf,WACtBN,aAAauC,QACbzC,GAAS,GACTZ,EFPG,CACHF,KAAM,2BEONE,EAASH,EAAQ,KAiCoBV,QAASA,EACTmD,gBAAiBA,EACjBD,kBAAmBA,EACnBzB,SAAUA,gBC/GxC0C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCNRQ,EAAcC,YAAgB,CAChC5B,QJK0B,WAAyE,IAAxED,EAAuE,uDAAhDxC,EAAWsE,EAAqC,uCAClG,OAAQA,EAAOnE,MACX,IAAK,YACD,OAAO,2BAAIqC,GAAX,IAAkB7C,MAAO6C,EAAM7C,MAAQ,IAE3C,IAAK,YACD,OAAO,2BAAI6C,GAAX,IAAkB7C,MAAO6C,EAAM7C,MAAQ,IAE3C,IAAK,cAGL,IAAK,uBACD,OAAO,2BAAI6C,GAAX,IAAkB7C,MAAO2E,EAAOvE,aAEpC,IAAK,yBACD,OAAO,2BAAIyC,GAAX,IAAkBvC,SAAU,EAAGF,WAAY,IAE/C,IAAK,kBACD,OAAO,2BAAIyC,GAAX,IAAkBzC,WAAYuE,EAAOpD,qBAEzC,IAAK,gBACD,OAAO,2BAAIsB,GAAX,IAAkBvC,SAAUqE,EAAOhD,mBAEvC,QACI,OAAOkB,MIvBN+B,EAAQC,YAAYJ,GCFjCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACF,cAACK,EAAD,QAGFC,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.a0ef8b41.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport React from 'react';\r\n\r\n\r\nexport type ButtonType = {\r\n    title: string\r\n    callback: () => void\r\n}\r\n\r\nexport function UniButton(props: ButtonType) {\r\n\r\n    const callBackAction = () => {\r\n        props.callback()\r\n    }\r\n\r\n    return (\r\n        <Button variant={\"outlined\"} style={{color: 'black'}} onClick={callBackAction}>{props.title}</Button>\r\n    )\r\n}","import {Typography} from '@material-ui/core';\r\nimport {ClassNameMap} from '@material-ui/core/styles/withStyles';\r\nimport React from 'react';\r\nimport {SetStateAction} from 'react';\r\nimport {Dispatch} from 'react';\r\nimport {UniButton} from './Components/UniButton';\r\n\r\nexport type CounterPropsType = {\r\n    value: number\r\n    maxValue: number\r\n    Inc: () => void\r\n    Reset: (startValue: number) => void\r\n    Dec: () => void\r\n    startValue: number\r\n    startValueDisplay: number\r\n    setError: Dispatch<SetStateAction<boolean>>\r\n    error: boolean\r\n    classes: ClassNameMap<\"root\" | \"error\">\r\n}\r\n\r\nexport function Counter(props: CounterPropsType) {\r\n    return (\r\n        <div>\r\n            <Typography align={\"center\"}\r\n                        variant={'overline'}\r\n                        style={{fontSize: '1em', fontWeight: 'bolder'}}>Counter</Typography>\r\n            <div className={props.error ? props.classes.error : ''}\r\n                 style={{marginTop: \"20px\", marginBottom: '30px', fontSize: '20px'}}>{props.error ?\r\n                <span>Oops</span> : props.value}</div>\r\n            <UniButton callback={props.Inc}\r\n                       title='+1'\r\n            />\r\n            <UniButton callback={props.Dec}\r\n                       title='-1'\r\n            />\r\n            <UniButton callback={() => {props.Reset(props.startValue)}}\r\n                       title='Reset'\r\n            />\r\n            {/*{props.count === props.maxValue && <div className='string'>{props.maxValue} is a max number here</div>}*/}\r\n        </div>\r\n    )\r\n}","const initState = {\r\n    value: 0,\r\n    startValue: 0,\r\n    maxValue: 5\r\n\r\n}\r\n\r\ntype InitStateType = typeof initState\r\n\r\nexport const counterReducer = (state: InitStateType = initState, action: AllACType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'INC_VALUE' : {\r\n            return {...state, value: state.value + 1}\r\n        }\r\n        case 'DEC_VALUE' : {\r\n            return {...state, value: state.value - 1}\r\n        }\r\n        case 'RESET_VALUE' : {\r\n            return {...state, value: action.startValue}\r\n        }\r\n        case 'SET_COUNTER_SETTINGS' : {\r\n            return {...state, value: action.startValue}\r\n        }\r\n        case 'CLEAR_COUNTER_SETTINGS' : {\r\n            return {...state, maxValue: 1, startValue: 0}\r\n        }\r\n        case 'SET_START_VALUE' : {\r\n            return {...state, startValue: action.settingsStartValue}\r\n        }\r\n        case 'SET_MAX_VALUE' : {\r\n            return {...state, maxValue: action.settingsMaxValue}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AllACType = IncACType\r\n    | DecACType\r\n    | ResetACType\r\n    | setCounterSettingsACType\r\n    | clearCounterLSACType\r\n    | setStartValueACType\r\n    | setMaxValueACType\r\n\r\nexport type IncACType = ReturnType<typeof incAC>\r\nexport type DecACType = ReturnType<typeof decAC>\r\nexport type ResetACType = ReturnType<typeof resetAC>\r\nexport type setCounterSettingsACType = ReturnType<typeof setCounterSettingsAC>\r\nexport type clearCounterLSACType = ReturnType<typeof clearCounterLSAC>\r\nexport type setStartValueACType = ReturnType<typeof setStartValueAC>\r\nexport type setMaxValueACType = ReturnType<typeof setMaxValueAC>\r\n\r\n\r\nexport const incAC = () => {\r\n    return {\r\n        type: 'INC_VALUE'\r\n    } as const\r\n}\r\n\r\nexport const decAC = () => {\r\n    return {\r\n        type: 'DEC_VALUE'\r\n    } as const\r\n}\r\n\r\nexport const resetAC = (startValue: number) => {\r\n    return {\r\n        type: 'RESET_VALUE',\r\n        startValue\r\n    } as const\r\n}\r\n\r\nexport const setCounterSettingsAC = (startValue: number) => {\r\n    return {\r\n        type: 'SET_COUNTER_SETTINGS',\r\n        startValue,\r\n    } as const\r\n}\r\n\r\nexport const clearCounterLSAC = () => {\r\n    return {\r\n        type: 'CLEAR_COUNTER_SETTINGS',\r\n    } as const\r\n}\r\n\r\nexport const setStartValueAC = (settingsStartValue: number) => {\r\n    return {\r\n        type: 'SET_START_VALUE',\r\n        settingsStartValue\r\n    } as const\r\n}\r\n\r\nexport const setMaxValueAC = (settingsMaxValue: number) => {\r\n    return {\r\n        type: 'SET_MAX_VALUE',\r\n        settingsMaxValue\r\n    } as const\r\n}\r\n","import {Box, Input} from '@material-ui/core';\r\nimport {Typography} from '@material-ui/core';\r\nimport React, {ChangeEvent, Dispatch, SetStateAction} from 'react';\r\nimport {UniButton} from './Components/UniButton';\r\nimport {ClassNameMap} from '@material-ui/core/styles/withStyles';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setMaxValueAC, setStartValueAC} from \"./bll/counter-reducer\";\r\n\r\nexport type CounterSettingsPropsType = {\r\n    startValue: number\r\n    maxValue: number\r\n    setToLocalStorage: () => void\r\n    clearLocalStorage: () => void\r\n    classes: ClassNameMap<\"error\" | \"root\" | \"CardItem\" | \"Input\">\r\n    startValueDisplay: number\r\n    maxValueDisplay: number\r\n    setError: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nexport function CounterSettings(props: CounterSettingsPropsType) {\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeStartValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (+e.currentTarget.value >= 0) {\r\n            props.setError(false)\r\n            let startValue = +e.currentTarget.value\r\n            dispatch(setStartValueAC(startValue))\r\n            localStorage.setItem('startValue', startValue.toString())\r\n        } else {\r\n            props.setError(true)\r\n        }\r\n    }\r\n\r\n    const onChangeMaxValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (+e.currentTarget.value >= 0) {\r\n            props.setError(false)\r\n            let maxValue = +e.currentTarget.value\r\n            dispatch(setMaxValueAC(maxValue))\r\n            localStorage.setItem('maxValue', maxValue.toString())\r\n        } else {\r\n            props.setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Typography variant={'overline'} style={{fontSize: '1em', fontWeight: 'bolder'}}>Settings</Typography>\r\n            <div className={props.classes.Input}><Typography variant={'overline'} style={{\r\n                whiteSpace: 'nowrap',\r\n                minWidth: '90px', marginLeft: '60px'\r\n            }}>Start value</Typography><Input type='number'\r\n                                              inputProps={{style: {textAlign: 'center', width: \"50px\"}}}\r\n                                              value={props.startValue}\r\n                                              onChange={onChangeStartValueHandler}/>\r\n            </div>\r\n            <div className={props.classes.Input}><Typography variant={'overline'} style={{\r\n                whiteSpace: 'nowrap',\r\n                minWidth: '90px', marginLeft: '60px'\r\n            }}>Max value</Typography> <Input type='number'\r\n                                             className={props.classes.Input}\r\n                                             inputProps={{style: {textAlign: 'center', width: \"50px\"}}}\r\n                                             value={props.maxValue}\r\n                                             onChange={onChangeMaxValueHandler}\r\n            />\r\n            </div>\r\n            <Box marginTop={'10px'}>\r\n                <UniButton callback={props.setToLocalStorage}\r\n                           title={'Set'}/>\r\n                <UniButton callback={props.clearLocalStorage}\r\n                           title={'Clear'}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {Grid} from '@material-ui/core';\nimport {Card} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core';\nimport {Container} from '@material-ui/core';\nimport React, {useEffect, useState} from 'react';\nimport {Counter} from './Counter';\nimport {CounterSettings} from './CounterSettings';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"./bll/store\";\nimport {clearCounterLSAC, decAC, incAC, resetAC, setCounterSettingsAC} from \"./bll/counter-reducer\";\n\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover'\n    },\n    error: {\n        color: 'red',\n    },\n    CardItem: {\n        width: '16em',\n        height: '10em',\n        textAlign: 'center',\n        background: \"#E6E6FA\",\n    },\n    Input: {\n        display: 'flex',\n        justifyItems: 'center',\n    }\n});\n\nfunction APP() {\n\n    const classes = useStyles();\n\n    let value = useSelector<AppStateType, number>(state => state.counter.value)\n    const startValueDisplay = useSelector<AppStateType, number>(state => state.counter.startValue)\n    const maxValueDisplay = useSelector<AppStateType, number>(state => state.counter.maxValue)\n    const dispatch = useDispatch()\n\n    let startValue = +localStorage.getItem('startValue')!\n    let maxValue = +localStorage.getItem('maxValue')!\n\n    useEffect(() => {\n\n    }, [])\n\n    let [error, setError] = useState<boolean>(false)\n\n    function Inc() {\n            if (value < maxValue) {\n                setError(false)\n                dispatch(incAC())\n            } else {\n                setError(true)\n            }\n        }\n\n    function Dec() {\n            if (value > startValue) {\n                setError(false)\n                dispatch(decAC())\n            } else {\n                setError(true)\n            }\n    }\n\n    function Reset(startValue: number) {\n        dispatch(resetAC(startValue))\n        setError(false)\n    }\n\n\n    const setToLocalStorage = () => {\n        setError(false)\n        if (startValueDisplay && maxValueDisplay) {\n            dispatch(setCounterSettingsAC(startValueDisplay))\n        }\n    }\n    const clearLocalStorage = () => {\n        localStorage.clear()\n        setError(false)\n        dispatch(clearCounterLSAC())\n        dispatch(resetAC(0))\n    }\n\n\n    return (\n        <div style={{\n            background: `url(https://wallpapers-hub.art/wallpaper-images/136632.jpg)`,\n            height: '100vh',\n            backgroundSize: 'cover'\n        }}>\n            <Container fixed maxWidth=\"md\" className={classes.root}>\n                <Grid container spacing={4} justifyContent={'center'}>\n                    <Grid item md={4}>\n                        <Card variant=\"outlined\" square className={classes.CardItem}>\n                            <Counter value={value}\n                                     maxValue={maxValue}\n                                     Inc={Inc}\n                                     Reset={Reset}\n                                     Dec={Dec}\n                                     startValue={startValue}\n                                     startValueDisplay={startValueDisplay}\n                                     setError={setError}\n                                     error={error}\n                                     classes={classes}\n                            />\n                        </Card>\n                    </Grid>\n                    <Grid item md={5}>\n                        <Card variant=\"outlined\" square className={classes.CardItem}>\n                            <CounterSettings startValue={startValue}\n                                             maxValue={maxValue}\n                                             setToLocalStorage={setToLocalStorage}\n                                             clearLocalStorage={clearLocalStorage}\n                                             classes={classes}\n                                             maxValueDisplay={maxValueDisplay}\n                                             startValueDisplay={startValueDisplay}\n                                             setError={setError}\n                            />\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n        ;\n}\n\nexport default APP;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {counterReducer} from \"./counter-reducer\";\r\n\r\nconst mainReducer = combineReducers({\r\n    counter: counterReducer\r\n    }\r\n)\r\n\r\nexport type AppStateType = ReturnType<typeof mainReducer>\r\n\r\nexport const store = createStore(mainReducer)\r\n\r\nexport type AppStoreType = typeof store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport { store } from './bll/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}